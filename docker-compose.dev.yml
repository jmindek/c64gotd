version: '3.9'
services:
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
    volumes:
      - ./localstack-data:/var/lib/localstack

  s3-uploader:
    image: amazon/aws-cli:2.15.35
    depends_on:
      - localstack
    volumes:
      - ./games:/games
      - ./scripts:/scripts:ro
      - ./backend/.env.dev:/backend/.env.dev:ro
      - ./scripts/s3-cors.json:/scripts/s3-cors.json:ro
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT_URL=http://localstack:4566
      - S3_BUCKET_NAME=c64gotd-local
    entrypoint: ["/bin/sh", "-c", "ls -l /games && sleep 2 && /scripts/upload-games-to-localstack.sh"]

  games-debugger:
    image: amazon/aws-cli:2.15.35
    volumes:
      - ./games:/games:ro
    entrypoint: ["/bin/sh", "-c", "ls -l /games && ls -l /"]
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - C64GOTD_ENV=dev
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    depends_on:
      backend:
        condition: service_healthy

  test-frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: ["npm", "run", "test"]

  test-backend:
    build:
      context: ./backend
    command: ["pytest"]
    environment:
    - PYTHONPATH=/app
    - C64GOTD_ENV=test
    volumes:
      - ./backend:/app
    depends_on:
      backend:
        condition: service_started
